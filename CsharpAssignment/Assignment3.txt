// Assignment 1: Inheritance
using System;

class Employee
{
    public int Id { get; set; }
    public string Name { get; set; }
    public DateTime Dob { get; set; }
    public double Salary { get; set; }

    public Employee(int id, string name, DateTime dob, double salary)
    {
        Id = id;
        Name = name;
        Dob = dob;
        Salary = salary;
    }

    public virtual void ComputeSalary()
    {
        Console.WriteLine($"Employee {Name} has a salary of {Salary}");
    }
}

class Manager : Employee
{
    public double OnsiteAllowance { get; set; }
    public double Bonus { get; set; }

    public Manager(int id, string name, DateTime dob, double salary, double onsiteAllowance, double bonus)
        : base(id, name, dob, salary)
    {
        OnsiteAllowance = onsiteAllowance;
        Bonus = bonus;
    }

    public override void ComputeSalary()
    {
        double totalSalary = Salary + OnsiteAllowance + Bonus;
        Console.WriteLine($"Manager {Name} has a total salary of {totalSalary}");
    }
}

// Assignment 2: Static
class FunctionCounter
{
    private static int count = 0;

    public static void CountFunction()
    {
        count++;
        Console.WriteLine($"Function called {count} times");
    }
}

// Assignment 3: Properties
class TimePeriod
{
    private double seconds;

    public double Hours
    {
        get { return seconds / 3600; }
        set { seconds = value * 3600; }
    }
}

// Assignment 4: Abstract Class
abstract class Furniture
{
    public string Material { get; set; }
    public abstract void DisplayDetails();
}

class Chair : Furniture
{
    public int LegCount { get; set; }

    public Chair(string material, int legCount)
    {
        Material = material;
        LegCount = legCount;
    }

    public override void DisplayDetails()
    {
        Console.WriteLine($"Chair made of {Material} with {LegCount} legs.");
    }
}

class Bookshelf : Furniture
{
    public int ShelfCount { get; set; }

    public Bookshelf(string material, int shelfCount)
    {
        Material = material;
        ShelfCount = shelfCount;
    }

    public override void DisplayDetails()
    {
        Console.WriteLine($"Bookshelf made of {Material} with {ShelfCount} shelves.");
    }
}

// Main Method
class Program
{
    static void Main()
    {
        // Assignment 1
        Employee emp = new Employee(1, "Dharanish", new DateTime(1990, 5, 12), 50000);
        emp.ComputeSalary();

        Manager mgr = new Manager(2, "Sanjay", new DateTime(1985, 8, 24), 80000, 10000, 15000);
        mgr.ComputeSalary();

        // Assignment 2
        FunctionCounter.CountFunction();
        FunctionCounter.CountFunction();
        FunctionCounter.CountFunction();

        // Assignment 3
        TimePeriod tp = new TimePeriod();
        tp.Hours = 2;
        Console.WriteLine($"Stored time in seconds: {tp.Hours * 3600}");

        // Assignment 4
        Chair chair = new Chair("Wood", 4);
        Bookshelf bookshelf = new Bookshelf("Metal", 5);
        chair.DisplayDetails();
        bookshelf.DisplayDetails();
    }
}
